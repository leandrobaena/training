package com.leandrobaena.kickoff.view;

/**
 * Entrada al programa de Kickoff - Sistema de torneos
 *
 * @author Leandro Baena Torres
 */
public class Main extends javax.swing.JFrame {

    //<editor-fold desc="Constructores" defaultstate="collapsed">
    /**
     * Inicializa el formulario principal
     */
    public Main() {
        initComponents();
        setExtendedState(java.awt.Frame.MAXIMIZED_BOTH);
    }
    //</editor-fold>

    //<editor-fold desc="Métodos" defaultstate="collapsed">
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainPanel = new javax.swing.JTabbedPane();
        menu = new javax.swing.JMenuBar();
        menuConfiguration = new javax.swing.JMenu();
        itemTeams = new javax.swing.JMenuItem();
        itemTournaments = new javax.swing.JMenuItem();
        itemStadiums = new javax.swing.JMenuItem();
        itemParameters = new javax.swing.JMenuItem();
        menuApplication = new javax.swing.JMenu();
        itemExit = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Kickoff - Sistema de torneos");

        mainPanel.setTabPlacement(javax.swing.JTabbedPane.BOTTOM);

        menuConfiguration.setText("Configuración");

        itemTeams.setText("Equipos");
        itemTeams.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemTeamsActionPerformed(evt);
            }
        });
        menuConfiguration.add(itemTeams);

        itemTournaments.setText("Torneos");
        itemTournaments.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemTournamentsActionPerformed(evt);
            }
        });
        menuConfiguration.add(itemTournaments);

        itemStadiums.setText("Estadios");
        itemStadiums.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemStadiumsActionPerformed(evt);
            }
        });
        menuConfiguration.add(itemStadiums);

        itemParameters.setText("Parámetros");
        itemParameters.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemParametersActionPerformed(evt);
            }
        });
        menuConfiguration.add(itemParameters);

        menu.add(menuConfiguration);

        menuApplication.setText("Aplicación");

        itemExit.setText("Salir");
        itemExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemExitActionPerformed(evt);
            }
        });
        menuApplication.add(itemExit);

        menu.add(menuApplication);

        setJMenuBar(menu);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(mainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 739, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(mainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 366, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Muestra el listado de equipos
     *
     * @param evt Evento de clic
     */
    private void itemTeamsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemTeamsActionPerformed
        int index = mainPanel.indexOfTab("Listado de equipos");
        if (index == -1) {
            ListTeams listTeams;
            listTeams = new ListTeams();
            mainPanel.add("Listado de equipos", listTeams);
            mainPanel.setSelectedComponent(listTeams);
        } else {
            mainPanel.setSelectedIndex(index);
        }
    }//GEN-LAST:event_itemTeamsActionPerformed

    private void itemExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemExitActionPerformed
        System.exit(0);
    }//GEN-LAST:event_itemExitActionPerformed

    private void itemTournamentsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemTournamentsActionPerformed
        int index = mainPanel.indexOfTab("Listado de torneos");
        if (index == -1) {
            ListTournaments listTournaments;
            listTournaments = new ListTournaments();
            mainPanel.add("Listado de torneos", listTournaments);
            mainPanel.setSelectedComponent(listTournaments);
        } else {
            mainPanel.setSelectedIndex(index);
        }
    }//GEN-LAST:event_itemTournamentsActionPerformed

    private void itemStadiumsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemStadiumsActionPerformed
        int index = mainPanel.indexOfTab("Listado de estadios");
        if (index == -1) {
            ListStadiums listStadiums;
            listStadiums = new ListStadiums();
            mainPanel.add("Listado de estadios", listStadiums);
            mainPanel.setSelectedComponent(listStadiums);
        } else {
            mainPanel.setSelectedIndex(index);
        }
    }//GEN-LAST:event_itemStadiumsActionPerformed

    private void itemParametersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemParametersActionPerformed
        int index = mainPanel.indexOfTab("Listado de parámetros");
        if (index == -1) {
            ListParameters listParameters;
            listParameters = new ListParameters(null);
            mainPanel.add("Listado de parámetros", listParameters);
            mainPanel.setSelectedComponent(listParameters);
        } else {
            mainPanel.setSelectedIndex(index);
        }
    }//GEN-LAST:event_itemParametersActionPerformed

    /**
     * Programa principal
     *
     * @param args Argumentos en línea de comandos
     */
    public static void main(String args[]) {
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }

        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new Main().setVisible(true);
            }
        });
    }
    //</editor-fold>

    //<editor-fold desc="Atributos" defaultstate="collapsed">
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem itemExit;
    private javax.swing.JMenuItem itemParameters;
    private javax.swing.JMenuItem itemStadiums;
    private javax.swing.JMenuItem itemTeams;
    private javax.swing.JMenuItem itemTournaments;
    private javax.swing.JTabbedPane mainPanel;
    private javax.swing.JMenuBar menu;
    private javax.swing.JMenu menuApplication;
    private javax.swing.JMenu menuConfiguration;
    // End of variables declaration//GEN-END:variables
    //</editor-fold>
}
